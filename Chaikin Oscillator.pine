// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© sbtnc
// Created: 2019-05-19
// Last modified: 2022-04-09
// Version 2.0

// @version=5
indicator("Chaikin Oscillator", "Chaikin Osc", format=format.volume, timeframe="", timeframe_gaps=true)

//--------------------------------------------------------------------
//                               Inputs
//--------------------------------------------------------------------

g_indicator         = "Oscillator"
g_style             = "Style"

t_gradientLength    = "Number of bars used in the oscillator's gradient coloring. The length determines the lookback for the highest positive and lowest negative values."

i_fastLength        = input.int (3,                                         "Fast Length", 1,                                               group=g_indicator)
i_slowLength        = input.int (10,                                        "Slow Length", 1,                                               group=g_indicator)
i_positiveOscColor  = input     (color.green,                               "Oscillator",                           inline="Colors",        group=g_style)
i_negativeOscColor  = input     (color.red,                                 "",                                     inline="Colors",        group=g_style)
i_gradientLength    = input     (20,                                        "Gradient Length",  t_gradientLength,                           group=g_style)
i_positiveBgColor   = input     (color.new(color.green, 90),                "Background",                           inline="Background",    group=g_style)
i_negativeBgColor   = input     (color.new(color.red, 90),                  "",                                     inline="Background",    group=g_style)

//--------------------------------------------------------------------
//                                Logic
//--------------------------------------------------------------------

osc = ta.ema(ta.accdist, i_fastLength) - ta.ema(ta.accdist, i_slowLength)

//--------------------------------------------------------------------
//                          Plotting & styling
//--------------------------------------------------------------------

// The oscillator's gradient uses the lowest and highest values of the last `i_gradientLength` bars
// The bottom value should be negative, the top value should be positive, and the center always situated on the zero level
extremeValue = math.max(ta.highest(osc, i_gradientLength), math.abs(ta.lowest(osc, i_gradientLength)))
c_osc = color.from_gradient(osc, -extremeValue, extremeValue, i_negativeOscColor, i_positiveOscColor)
chaikinOsc = plot(osc, "Oscillator", c_osc)

c_fill = osc > 0 ? i_positiveBgColor : i_negativeBgColor
mid = plot(0, "", editable=false, display=display.none)
fill(mid, chaikinOsc, c_fill)

hline(0, "Zero", color.new(color.gray, 90), hline.style_solid)
